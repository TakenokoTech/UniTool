name: Release

on:
  push: { tags: ['v*'] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library
      
      # Build
      - name: Build project
        uses: webbertakken/unity-builder@v0.10
        with:
          unityVersion: 2019.3.7f1
          buildMethod: UniTool.Scripts.Editor.UnityPackageExporter.Export
      
      # Create Release
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Update package.
          draft: false
          prerelease: false
      
      # Get Tag
      - id: get-tag
        uses: olegtarasov/get-tag@v2
          
      # Upload Release Asset
      - id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: Dist/UniTool.unitypackage
          asset_name: UniTool.${{ steps.tagName.outputs.tag }}.unitypackage
          asset_content_type: application/zip
